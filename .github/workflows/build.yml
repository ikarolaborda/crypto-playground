jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: cr1pt0D0m3
          MYSQL_DATABASE: crypto
          MYSQL_PASSWORD: cr1pt0D0m3
        ports:
          - 4306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and Run Containers
        run: make dup

      - name: Install Composer Dependencies
        run: |
          mkdir -p /tmp/composer
          export COMPOSER_HOME=/tmp/composer
          docker exec php bash -c "composer config --global github-protocols https"
          docker exec php bash -c "composer install --optimize-autoloader --ignore-platform-reqs"

      - name: Clear Config Cache
        run: docker exec php bash -c "php artisan config:clear"

      - name: Clear Application Cache
        run: docker exec php bash -c "php artisan cache:clear"

      - name: Run Migrations
        run: docker exec php bash -c "php artisan migrate:fresh --seed"

      - name: Run Unit Tests
        run: docker exec php bash -c "php artisan test"

      - name: Stop Docker Containers
        run: make ddw
